<project 
	xmlns="http://maven.apache.org/POM/4.0.0" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	
	<modelVersion>4.0.0</modelVersion>

	<!-- Inherit from Coherity Java Parent POM -->
    <!--
	<parent>
		<groupId>io.coherity.shared.parent</groupId>
		<artifactId>parent-pom-java</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>
    -->

	<groupId>io.coherity.shared.parent.spring</groupId>
	<artifactId>parent-pom-spring</artifactId>
	<name>Coherity Parent POM for Spring Boot</name>
	<version>1.0.0</version>
	<packaging>pom</packaging>
	
	<description>Parent POM for Coherity Spring Boot applications, inheriting from parent-pom-java</description>
	<url>https://github.com/coherityio/parent-pom-spring</url>
	
	<properties>
		<!-- Spring Boot version -->
		<spring-boot.version>3.2.8</spring-boot.version>
		
		<!-- Override Java version to 21 (latest LTS) -->
		<java.version>21</java.version>
		<maven.compiler.source>21</maven.compiler.source>
		<maven.compiler.target>21</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		
		<!-- Spring specific versions -->
		<spring-cloud.version>2023.0.3</spring-cloud.version>
		<testcontainers.version>1.19.8</testcontainers.version>
		
		<!-- Additional Spring Boot compatible versions -->
		<micrometer.version>1.12.8</micrometer.version>
		<hibernate.version>6.4.9.Final</hibernate.version>
		
		<!-- Test framework versions -->
		<junit.version>5.11.0</junit.version>
		<mockito.version>5.14.0</mockito.version>

		<!-- Maven plugin versions -->
		<maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
		<maven-surefire-plugin.version>3.5.0</maven-surefire-plugin.version>

		<!-- Repository URLs - can be overridden via system properties -->
		<project.repo.url>https://maven.pkg.github.com/coherityio/parent-pom-spring</project.repo.url>
	</properties>

	<repositories>
		<!-- Commented out embedded repositories -->
		<!--
		<repository>
			<id>embedded</id>
			<name>Embedded Repository</name>
			<url>file://${project.basedir}/repository</url>
		</repository>
		<repository>
			<id>embedded</id>
			<name>Embedded Repository</name>
			<url>file://${session.executionRootDirectory}/repository</url>
		</repository>
		-->
	</repositories>

	<distributionManagement>
		<repository>
			<id>coherity-parent-pom-spring-repo</id>
			<name>Coherity Parent Pom Spring Repo</name>
			<url>https://maven.pkg.github.com/coherityio/parent-pom-spring</url>
		</repository>
		<snapshotRepository>
			<id>coherity-parent-pom-spring-repo</id>
			<name>Coherity Parent Pom Spring Snapshots Repo</name>
			<url>https://maven.pkg.github.com/coherityio/parent-pom-spring</url>
		</snapshotRepository>
	</distributionManagement>
	<profiles>
		<profile>
			<id>sign-artifacts</id>
			<activation>
				<property>
					<name>gpg.keyname</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>3.2.4</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<dependencyManagement>
		<dependencies>
			<!-- Spring Boot BOM (Bill of Materials) -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			
			<!-- Spring Cloud BOM -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			
			<!-- Testcontainers BOM -->
			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>testcontainers-bom</artifactId>
				<version>${testcontainers.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<!-- ================================================ -->
			<!-- SPRING BOOT STARTERS -->
			<!-- ================================================ -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter</artifactId>
				<version>${spring-boot.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-starter-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-web</artifactId>
				<version>${spring-boot.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-starter-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-data-jpa</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-security</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-actuator</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-validation</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			
			<!-- Use Log4j2 instead of default Logback -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-log4j2</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>

			<!-- ================================================ -->
			<!-- TEST DEPENDENCIES -->
			<!-- ================================================ -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-test</artifactId>
				<version>${spring-boot.version}</version>
				<scope>test</scope>
			</dependency>
			
			<dependency>
				<groupId>org.springframework.security</groupId>
				<artifactId>spring-security-test</artifactId>
				<version>6.2.5</version>
				<scope>test</scope>
			</dependency>
			
			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>junit-jupiter</artifactId>
				<scope>test</scope>
			</dependency>
			
			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>postgresql</artifactId>
				<scope>test</scope>
			</dependency>

			<!-- ================================================ -->
			<!-- ADDITIONAL SPRING ECOSYSTEM -->
			<!-- ================================================ -->
			<dependency>
				<groupId>io.micrometer</groupId>
				<artifactId>micrometer-core</artifactId>
				<version>${micrometer.version}</version>
			</dependency>
			
			<dependency>
				<groupId>io.micrometer</groupId>
				<artifactId>micrometer-registry-prometheus</artifactId>
				<version>${micrometer.version}</version>
			</dependency>

			<!-- ================================================ -->
			<!-- TEST FRAMEWORK DEPENDENCIES -->
			<!-- ================================================ -->
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-core</artifactId>
				<version>${mockito.version}</version>
				<scope>test</scope>
			</dependency>
			
			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-junit-jupiter</artifactId>
				<version>${mockito.version}</version>
				<scope>test</scope>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<!-- Common dependencies that most Spring Boot apps will need -->
	<dependencies>
		<!-- Inherit test dependencies from parent-pom-java -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- Spring Boot test -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<!-- Maven Compiler Plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<source>${maven.compiler.source}</source>
						<target>${maven.compiler.target}</target>
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>
				
				<!-- Maven Surefire Plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
				</plugin>

				<!-- Spring Boot Maven Plugin -->
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring-boot.version}</version>
					<configuration>
						<layers>
							<enabled>true</enabled>
						</layers>
						<image>
							<builder>paketobuildpacks/builder-jammy-base:latest</builder>
						</image>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				
				<!-- Build Helper Plugin for additional source directories -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>3.6.0</version>
				</plugin>
				
				<!-- Spring Boot AOT Plugin for native compilation -->
				<plugin>
					<groupId>org.graalvm.buildtools</groupId>
					<artifactId>native-maven-plugin</artifactId>
					<version>0.10.2</version>
				</plugin>

			</plugins>
		</pluginManagement>
		
		<plugins>
			<!-- Enable essential plugins by default -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>
			
			<!-- Enable Spring Boot plugin by default -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

<!--
	<profiles>
		<profile>
			<id>native</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.graalvm.buildtools</groupId>
						<artifactId>native-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>build-native</id>
								<goals>
									<goal>compile-no-fork</goal>
								</goals>
								<phase>package</phase>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		
		<profile>
			<id>dev</id>
			<dependencies>
				<dependency>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-devtools</artifactId>
					<optional>true</optional>
				</dependency>
			</dependencies>
		</profile>
		
		<profile>
			<id>docker</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-maven-plugin</artifactId>
						<configuration>
							<image>
								<name>${project.groupId}/${project.artifactId}:${project.version}</name>
								<publish>false</publish>
							</image>
						</configuration>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>build-image</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
-->
</project>
